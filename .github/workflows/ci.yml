name: deploy

"on":
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Alpine
        uses: jirutka/setup-alpine@v1
        with:
          branch: "v3.18"
          packages: >
            openssh

      - name: Verify Alpine Release
        run: cat /etc/alpine-release
        shell: alpine.sh {0}

      - uses: ./.github/actions/ssh
        with:
          host: ${{ secrets.VPS_IP }}
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Cache ssh key passphrase & Run Deployment
        env:
          SSH_PASSPHRASE: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          USER: ${{ secrets.USER }}
          VPS_IP: ${{ secrets.VPS_IP }}
          DOMAIN: ${{ secrets.DOMAIN }}
          EMAIL: ${{ secrets.EMAIL }}
          DASH_CREDS: ${{ secrets.DASH_CREDS }}
        shell: alpine.sh --root {0}
        run: |
          ssh -v ${USER}@${VPS_IP} << 'EOF'
          set -x
          cd /home/${USER}/ || exit 1
          if [ ! -d "traefik" ]; then
          git clone https://github.com/rafasmour/traefik.git || exit 1
          fi
          cd traefik || exit 1
          git pull || exit 1
          if [ ! -f ".env" ]; then
          touch .env
          echo "DOMAIN=${DOMAIN}" >> .env
          echo "DASH_CREDS=${DASH_CREDS}" >> .env
          echo "ECMA_EMAIL=${EMAIL}" >> .env
          fi
          docker compose -f docker-compose.prod.yml down --remove-orphans || exit 1
          docker compose -f docker-compose.prod.yml up -d --build --force-recreate || exit 1
          EOF